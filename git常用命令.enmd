---
title: git常用命令
notebook: inbox
tags:["git"]
---

### 配置命令`config`

1.  说明
	
	用于配置本机git的相关属性

1.  语法
	
		git config [选项] 属性名 属性值

2.  选项
	
	*	`--global` ：表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址  
		
3.  示例
	
		#设置你的名字和email地址
		$ git config --global user.name "Your Name
		$ git config --global user.email "email@example.com"

### `cd`命令

1.  说明
	
	转换当前目录（类似于linux中的cd命令）

2.  语法
	
		cd 目录名（包括相对目录和觉得目录）

3.  选项
	
	无

4.  示例
		
		cd /d/git_repository

### `mkdir`命令

1.  说明
	
	类似linux中的mkdir命令，创建目录

2.  语法
	
	略

3.  选项
	
	略

4.  示例
	
		mkdir testdir

### `pwd`

1.  说明
	
	类似linux

### `init`命令

1.  说明
	
	将当前目录变成Git可以管理的仓库

2.  语法
	
		git init

3.  选项
	
	略

4.  示例
	
	略

### `add`命令

1.  说明
	
	将文件添加到仓库（本地仓库）

2.  语法
	
		git add file

3.  选项
	
	略

4.  示例
	
		git add readme.txt

### `commit`

1.  说明
	
	提交文件至远程仓库

2.  语法
	
		git commit [选项]

3.  选项
	
	*	`-m` ：为本次添加说明

4.  示例
	
		git commit -m "add readme file"


### `status`命令

1.  说明
	
	查看修改的文件

2.  语法
	
	git status

3.  选项
	
	略

4.  示例

		git status

### `diff`命令

1.  说明
	
	比较文件修改内容

2.  语法
	
		git  diff file 

3.  选项

	略

4.  示例
	
		git diff readme.txt

### `log`命令

1.  说明
	
	查看历史记录

2.  语法
		
		git log

3.  选项
	
	*	`--pretty`：显示commit id + 提交时的说明

4.  示例
		
		git log --pretty=oneline

### `reset`版本回退命令

1.  说明
	
	将文件的版本回退到以前的版本

2.  语法
	
		git reset --hard HEAD^

3.  选项
		
	*	`--hard HEAD` ：`HEAD`表示当前版本，`HEAD^`表示上一个版本，`HEAD^^`表示上上个版本，一次类推，也可以使用`HEAD~n`表示上n个版本
	*	`--hard commit_id`：其中commit_id为每次提交时生成的id，该id会在每次提交时显示

4.  示例
		
		git reset --hard HEAD^^

### ``


